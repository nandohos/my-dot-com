---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
---

<header
  class="sticky top-0 bg-latte-mantle dark:bg-macchiato-mantle shadow z-10"
>
  <nav
    class="max-w-4xl container mx-auto px-4 py-2 flex items-center justify-between"
  >
    <h2 class="text-xl font-bold m-0">
      <a
        href="/"
        class="text-latte-text dark:text-macchiato-text hover:text-latte-subtext0 dark:hover:text-macchiato-subtext0"
      >
        {SITE_TITLE}
      </a>
    </h2>
    <div class="space-x-4">
      <HeaderLink
        href="/"
        class="text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white"
        >Home</HeaderLink
      >
      <HeaderLink
        href="/about"
        class="text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white"
        >About</HeaderLink
      >
      <HeaderLink
        href="/blog"
        class="text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white"
        >Blog</HeaderLink
      >
    </div>
    <div class="hidden md:flex space-x-2">
      <button id="theme-toggle" class="text-gray-600 dark:text-gray-300 p-1">
        <svg
          id="theme-toggle-dark-icon"
          class="w-6 h-6"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
          ></path>
        </svg>
        <svg
          id="theme-toggle-light-icon"
          class="hidden w-6 h-6"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
            fill-rule="evenodd"
            clip-rule="evenodd"></path>
        </svg>
      </button>
      <a
        href="https://x.com/astrodotbuild"
        target="_blank"
        class="text-gray-600 dark:text-gray-300 p-1"
      >
        <span class="sr-only">Follow Astro on X</span>
        <svg viewBox="0 0 24 24" aria-hidden="true" class="w-6 h-6">
          <path
            fill="currentColor"
            d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"
          ></path>
        </svg>
      </a>
      <a
        href="https://github.com/withastro/astro"
        target="_blank"
        class="text-gray-600 dark:text-gray-300 p-1"
      >
        <span class="sr-only">Go to Astro's GitHub repo</span>
        <svg viewBox="0 0 16 16" aria-hidden="true" class="w-6 h-6">
          <path
            fill="currentColor"
            d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
          ></path>
        </svg>
      </a>
    </div>
  </nav>
</header>

<script>
  function getThemePreference(): string {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme") || "light";
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  }

  function setTheme(theme: string) {
    if (theme === "dark") {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    localStorage.setItem("theme", theme);
  }

  function updateIcon(theme: string) {
    const darkIcon = document.getElementById("theme-toggle-dark-icon");
    const lightIcon = document.getElementById("theme-toggle-light-icon");

    if (darkIcon && lightIcon) {
      // Check if both elements exist
      if (theme === "dark") {
        darkIcon.classList.add("hidden");
        lightIcon.classList.remove("hidden");
      } else {
        darkIcon.classList.remove("hidden");
        lightIcon.classList.add("hidden");
      }
    } else {
      console.warn("One or both of the theme toggle icons are missing.");
    }
  }

  // Set initial theme
  const theme = getThemePreference();
  setTheme(theme);
  updateIcon(theme);

  // Toggle theme on button click
  const themeToggle = document.getElementById("theme-toggle");
  if (themeToggle) {
    themeToggle.addEventListener("click", () => {
      const currentTheme = getThemePreference();
      const newTheme = currentTheme === "dark" ? "light" : "dark";
      setTheme(newTheme);
      updateIcon(newTheme);
    });
  }

  // Update theme when system preference changes
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (e) => {
      const newTheme = e.matches ? "dark" : "light";
      setTheme(newTheme);
      updateIcon(newTheme);
    });
</script>
